% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dist_func.R
\name{dist_func}
\alias{dist_func}
\title{dist_func}
\usage{
dist_func(data, theta, keyfun = c("hn","hr"), ...)
}
\arguments{
\item{data}{\code{eFrameDS} object containing the distance data and bin information.}

\item{formula}{formula for the scale parameter. Default is ~1.}

\item{theta}{angle of the camera viewshed in degrees}

\item{keyfun}{detection functions to fit (currently only half-normal ("hn") or
hazard rate ("hr")). No adjustments are currently permitted.}
}
\value{
a \code{efitDS} list model object giving the parameter estimates for each distance
function fitted and a table providing the effective sampled area (\code{esw}) of the camera
viewshed along with an estimate of the average detection probability (\code{Pa}), AIC and
the p-value from a Chi-sq GOF test (\code{p}).
}
\description{
\code{dist_func} estimates a distance function from distance data collected from
camera traps.  The distance function is then used to estimate the effective area
of the camera viewshed by integration. Data are assumed to be in bins specified in
 \code{cutpoints} (see \code{eFrameDS} for more details).  The detection function is
 estimated using the function \code{ds()} from package \code{Distance} using point
 distance sampling. Currently no adjustments are included in the fitting.
}
\examples{
 encounters<- HogDeer$encounters
 cutpoints<- HogDeer$cutpoints
 w<- cutpoints[length(cutpoints)] # truncation distance

 emf<- with(encounters, {
    eFrameDS(distance = dist_bin, size = count, siteID = cam, cutpoints = cutpoints,
             w=w, bin_nums=TRUE)
 })

 dist_func(emf, theta=40)

}
